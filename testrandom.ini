SIGNAL void testRandom() {
  int pos;
  int i, j;
  int lastPulsePinValue;
  int reached1, reached2, reached3;
  int at_floor;
	int randomnumber;

	
int floordude;
  reached1 = 0;
  reached2 = 0;
  reached3 = 0;
  pos = 0;

  // close the doors
  PORTC |= 1 << 8;
  for(;;)
  {
    randomnumber = rand(0)%9;    // generating random number 
	if (randomnumber==4)            // the pins we use are 0,1,2,3,8 so we dont want 4,5,6,7 to be generated, instead we assign same pin value to (4=pin 0,5=pin 1,6=pin 2,7=pin 3, so that we dont want to wait so much time
        {
    
          randomnumber=0;
        }
        else if(randomnumber==5)
        {
            randomnumber=1;
        }
         else if(randomnumber==6)
        {
            randomnumber=2;
        }
         else if(randomnumber==7)
        {
            randomnumber=3;
        }
        else 
        
        {
        randomnumber=randomnumber;
        }
     at_floor = 0;
  floordude=randomnumber;
  lastPulsePinValue = PORTC & (1 << 9);
  for (i = 0; i < 800; ++i) {              // event generated every 2 sec
    if (lastPulsePinValue < (PORTC & (1 << 9))) {
      if (TIM3_CCR1) pos += 1;
      if (TIM3_CCR2) pos -= 1;
    }
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }
  if (floordude==0)                // floor 1 button
  {
	  PORTC |= 1 <<floordude ;
	   printf(" floor 1\n");
	   for (i = 0; i < 400; ++i) {        // hold event for 1 sec 
    if (lastPulsePinValue < (PORTC & (1 << 9))) {
      if (TIM3_CCR1) pos += 1;
      if (TIM3_CCR2) pos -= 1;
    }
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
  }
	   
	PORTC ^= 1 <<floordude ;      //reset
	   
  }
  else if (floordude==1)                   // floor 2 button
  {
	  PORTC |= 1 <<floordude ;
	   printf(" floor 2\n");
	 for (i = 0; i < 400; ++i) {         // hold event for 1 sec 
      if (lastPulsePinValue < (PORTC & (1 << 9))) {
        if (TIM3_CCR1) pos += 1;
        if (TIM3_CCR2) pos -= 1;
      }
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
    }
	  
	  PORTC ^= 1 <<floordude ;   //reset
	  
  }
  else if (floordude==2)        // floor 3   button
  {
	  PORTC |= 1 <<floordude ;
	   printf(" floor 3\n");
	  for (i = 0; i < 400; ++i) {          // hold event for 1 sec 
      if (lastPulsePinValue < (PORTC & (1 << 9))) {
        if (TIM3_CCR1) pos += 1;
        if (TIM3_CCR2) pos -= 1;
      }
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
    }
	PORTC ^= 1 <<floordude ;   //reset
	
  }
  else if (floordude==3)               //stop button
  {
	  PORTC |= 1 <<floordude ;
	   printf("stop\n");
	  for (i = 0; i < 400; ++i) {        // hold event for 1 sec
      if (lastPulsePinValue < (PORTC & (1 << 9))) {
        if (TIM3_CCR1) pos += 1;
        if (TIM3_CCR2) pos -= 1;
      }
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
    }
	PORTC ^= 1 <<floordude ;  //reset  (stop release)
	
  }
  else if (floordude==8)             // door button
  {
	  if (at_floor)            // only operate if it is at floor
	  {
	  PORTC ^= 1 <<floordude ;
	   printf("door opening \n");
	  for (i = 0; i < 400; ++i) {
      if (lastPulsePinValue < (PORTC & (1 << 9))) {
        if (TIM3_CCR1) pos += 1;
        if (TIM3_CCR2) pos -= 1;
      }
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(0.0025);
    }
	PORTC |= 1 <<floordude ;      //reset  closed
  }
  }
  
  
  
  
	}


}